name: Cypress Tests with Dependency and Artifact Caching

on: push

jobs:
  install:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          # Disable running of tests within install job
          runTests: false
          build: npm run build

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: .output

  cypress-run:
    runs-on: ubuntu-22.04
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .output

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: npm start
          browser: chrome
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .output

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.DOCKER_AUTH_TOKEN }}
      - name: Build image and push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: "docker.pkg.github.com/tudorteisanu/nuxt3-starter/dev"
          push: true
          file: "docker/production/Dockerfile"

      - name: Add ssh key
        run: |
          set -eu
          mkdir "$HOME/.ssh"
          echo "${{ secrets.key }}" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"
      - name: Update services
        shell: bash
        env:
          USER: ${{ secrets.user }}
          HOST: ${{ secrets.host }}
          DIST: ${{ secrets.dist }}
        run: ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no $USER@$HOST "${DIST}/setup.sh"
